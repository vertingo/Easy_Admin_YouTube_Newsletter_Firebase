{% macro render_menu_item(item, translation_domain) %}
    {% if item.type == 'divider' %}
        {{ item.label|trans(domain = translation_domain) }}
    {% else %}
        {% set menu_params = {} %}
        {% set path =
        item.type == 'link' ? item.url :
        item.type == 'route' ? path(item.route, item.params) :
        item.type == 'entity' ? path('easyadmin', { entity: item.entity, action: 'list' }|merge(menu_params)|merge(item.params)) :
        item.type == 'empty' ? '#' : '' %}

        {# if the URL generated for the route belongs to the backend, regenerate
           the URL to include the menu_params to display the selected menu item
           (this is checked comparing the beginning of the route URL with the backend homepage URL)
        #}
        {% if item.type == 'route' and (path starts with path('easyadmin')) %}
            {% set path = path(item.route, menu_params|merge(item.params)) %}
        {% endif %}

        <a href="{{ path }}" {% if item.target|default(false) %}target="{{ item.target }}"{% endif %}>
            {% if item.icon is not empty %}<i class="fa {{ item.icon }}"></i>{% endif %}
            <span>{{ item.label|trans(domain = translation_domain) }}</span>
            {% if item.children|default([]) is not empty %}<i class="fa fa-angle-left pull-right"></i>{% endif %}
        </a>
    {% endif %}
{% endmacro %}

{% import _self as helper %}

{% block main_menu_before %}{% endblock %}

<ul class="sidebar-menu">
    {% block main_menu %}

        {% set route = app.request.attributes.get('_route') %}
        {% set entity = app.request.query.get('entity') %}
        {% set items = easyadmin_config('design.menu') %}
        {% set keyValue = entity ? ["entity",entity] : ["route",route] %}

        {% for item in items %}
            {% set roleMenuParent = item.role is defined ? is_granted(item.role) : true %}
            {% if roleMenuParent %}
                {% set havChildrenActive = false %}
                {% for children in item.children %}
                    {% if keyValue.0 in children|keys and children[keyValue.0] == keyValue.1 %}
                        {% set havChildrenActive = true %}
                    {% endif %}
                {% endfor %}
                <li class="{{ item.type == 'divider' ? 'header' }} {{ item.children is not empty ? 'treeview' }} {{ keyValue.0 in item|keys and item[keyValue.0] == keyValue.1 ? 'active' }} {{ havChildrenActive ? 'submenu-active active' }}">
                    {{ helper.render_menu_item(item, _entity_config.translation_domain|default('messages')) }}
                    {% if item.children|default([]) is not empty %}
                        <ul class="treeview-menu">
                            {% for subitem in item.children %}
                                {% set roleMenuChild = subitem.role is defined ? is_granted(subitem.role) : true %}
                                {% if roleMenuChild %}
                                    <li class="{{ subitem.type == 'divider' ? 'header' }} {{ keyValue.0 in subitem|keys and subitem[keyValue.0] == keyValue.1 ? 'active' }} ">
                                        {{ helper.render_menu_item(subitem, _entity_config.translation_domain|default('messages')) }}
                                    </li>
                                {% endif %}
                            {% endfor %}
                        </ul>
                    {% endif %}
                </li>
            {% endif %}
        {% endfor %}
    {% endblock main_menu %}
</ul>

{% block main_menu_after %}
{% endblock %}
